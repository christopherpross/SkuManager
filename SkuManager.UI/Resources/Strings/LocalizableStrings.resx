<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="confirmActionView_noButton_accessibilityHint" xml:space="preserve">
    <value>Bricht die Aktion ab und kehrt zum Hauptfenster zurück.</value>
  </data>
  <data name="confirmActionView_noButton_title" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="confirmActionView_title" xml:space="preserve">
    <value>Bestätigung erforderlich</value>
  </data>
  <data name="confirmActionView_yesButton_accessibilityHint" xml:space="preserve">
    <value>Bestätigt die Aktion</value>
  </data>
  <data name="confirmActionView_yesButton_title" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="folderDialog_wowInterfacePath_description" xml:space="preserve">
    <value>Bitte wähle den interface-Ordner deiner World of Warcraft-Classic installation.</value>
  </data>
  <data name="folderDialog_wowMenuPath_description" xml:space="preserve">
    <value>Wähle den Ordner deiner wow_menu installation aus.</value>
  </data>
  <data name="mainwindow_actionDescription_accessibilityDescription" xml:space="preserve">
    <value>Hilfetext zur ausgewählten aktion</value>
  </data>
  <data name="mainwindow_actionDescription_placeholder" xml:space="preserve">
    <value>Keine Aktion ausgewählt. 
Wähle erst eine Aktion im Dropdown aus, dann erscheint hier ein Hilfetext zu dieser Aktion.</value>
  </data>
  <data name="mainwindow_actionPicker_accessibilityHint" xml:space="preserve">
    <value>Wähle eine Aktion aus. Du kannst mit TAB zum nächsten Feld wechseln, dort findest Du zur ausgewählten Aktion einen Hilfetext. Bestätige die Auswahl mit dem Schalter namens "OK".</value>
  </data>
  <data name="mainwindow_action_install_description" xml:space="preserve">
    <value>Installiert alle Sku-WoW-Addons/Skripte und deren Abhängigkeiten, welche im eingestellten Manifest enthalten sind.</value>
  </data>
  <data name="mainwindow_action_install_title" xml:space="preserve">
    <value>Installieren</value>
  </data>
  <data name="mainwindow_action_update_description" xml:space="preserve">
    <value>Aktualisiere alle Sku-WoW-Addons und dazugehörige skripts.
Zu nächst wird nach updates für die Addons/Skripts gesucht, die im Manifest festgelegt wurden. Dann wird, falls gewünscht das Update durchgeführt.

Bitte beachte:
Es wird nur nach Updates für die Addons/Skripts und deren abhänigkeiten gesucht, welche im Manifest vermerkt sind.</value>
  </data>
  <data name="mainwindow_action_update_title" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="mainwindow_instructionsLabel" xml:space="preserve">
    <value>Wähle die Aktion aus, die du ausführen möchtest.</value>
  </data>
  <data name="mainwindow_moreButton_accessibilityHint" xml:space="preserve">
    <value>Öffnet ein fenster, in dem unter anderem die Dokumentation des SkuManagers geöffnet werden kann.</value>
  </data>
  <data name="mainwindow_moreButton_title" xml:space="preserve">
    <value>Mehr</value>
  </data>
  <data name="mainwindow_moreMenuItem_sku-discord" xml:space="preserve">
    <value>Besuche uns in Discord</value>
  </data>
  <data name="mainwindow_moreMenu_item_about" xml:space="preserve">
    <value>Über SkuManager</value>
  </data>
  <data name="mainwindow_moreMenu_item_donate" xml:space="preserve">
    <value>Unterstütze das Sku-Projekt</value>
  </data>
  <data name="mainwindow_moreMenu_item_sku-repo" xml:space="preserve">
    <value>Gehe zum Github-Repository des Sku-Addons</value>
  </data>
  <data name="mainwindow_moreMenu_item_sku-website" xml:space="preserve">
    <value>Gehe zur offiziellen Webseite des Sku-Addons</value>
  </data>
  <data name="mainwindow_moreMenu_item_skumanager-doc" xml:space="preserve">
    <value>Öffne die Dokumentation des SkuManagers</value>
  </data>
  <data name="mainwindow_moreMenu_item_skumanager-repo" xml:space="preserve">
    <value>Gehe zum Github-Repository des SkuManagers</value>
  </data>
  <data name="mainwindow_okButton_accessibilityHint" xml:space="preserve">
    <value>Führt die in diesem Fenster ausgewählte Aktion aus.</value>
  </data>
  <data name="mainwindow_okButton_title" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="mainwindow_optionsButton_accessibilityHint" xml:space="preserve">
    <value>Öffnet die Einstellungen.</value>
  </data>
  <data name="mainwindow_optionsButton_title" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="mainwindow_title" xml:space="preserve">
    <value>SkuManager - Was möchtest du machen?</value>
  </data>
  <data name="settingsWindowwowInterfacePath_textBox_accessibilityHint" xml:space="preserve">
    <value>Benutze TAB um zu dem Schalter zu springen, mit dem Du den geforderten Ordner suchen kannst.</value>
  </data>
  <data name="settingsWindow_cancelButton_accessibilityHint" xml:space="preserve">
    <value>Schließt dieses Fenster und kehrt zum Hauptfenster zurück. Dabei werden vorgenommene Änderungen verworfen.</value>
  </data>
  <data name="settingsWindow_cancelButton_title" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="settingsWindow_manifestPicker_instructionsLabel" xml:space="preserve">
    <value>Wähle hier ein Addon-Manifest aus. Diese werden verwendet, um zu Steuern welche Addons installiert/aktualisiert werden sollen.</value>
  </data>
  <data name="settingsWindow_okButton_accessibilityHint" xml:space="preserve">
    <value>Speichert die Einstellungen und kehrt zum Hauptfenster zurück.</value>
  </data>
  <data name="settingsWindow_okButton_title" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="settingswindow_title" xml:space="preserve">
    <value>Skumanager - Einstellungen</value>
  </data>
  <data name="settingsWindow_wowInterfacePath_instructionsLabel" xml:space="preserve">
    <value>Pfad zum Interface-Ordner deiner World of Warcraft Classic installation.
Benutze den Schalter "Ordner suchen" um einen Dialog zum auswählen des Ordners zu öffnen. Du kannst in der schreibgeschützten Textbox den Pfad überprüfen. Er muss auf "interface" enden.</value>
  </data>
  <data name="settingsWindow_wowInterfacePath_searchButton_accessibilityHint" xml:space="preserve">
    <value>Öffnet einen Ordner-Suchen Dialog in dem du den geforderten Ordner suchen kannst. Bestätige die auswahl dann mit OK.</value>
  </data>
  <data name="settingsWindow_wowInterfacePath_searchButton_title" xml:space="preserve">
    <value>Ordner suchen</value>
  </data>
  <data name="settingsWindow_wowMenuPath_instructionsLabel" xml:space="preserve">
    <value>Wähle hier den Pfad zu deiner wow_menu installation. 
Bitte beachte das in den Ordner der von dir ausgewählt wird, die Dateien von wow_menu zu finden sein sollten. D.h. im Ordner den Du auswählst sollten die .ahk-Dateien usw. vorhanden sein. 
Falls Du das wow_menu erst installieren musst, werden die Dateien in dem Ordner abgelegt, den Du hier auswählst.
Du kannst in der schreibgeschützten Textbox den Pfad überprüfen.</value>
  </data>
  <data name="settingsWindow_wowMenuPath_searchButton_accessibilityHint" xml:space="preserve">
    <value>Öffnet einen Ordner-Suchen Dialog in dem du den geforderten Ordner suchen kannst. Bestätige die auswahl dann mit OK.</value>
  </data>
  <data name="settingsWindow_wowMenuPath_searchButton_title" xml:space="preserve">
    <value>Ordner suchen</value>
  </data>
  <data name="settingsWindow_wowMenuPath_textbox_accessibilityHint" xml:space="preserve">
    <value>Benutze TAB um zu dem Schalter zu springen, mit dem Du den geforderten Ordner suchen kannst.</value>
  </data>
  <data name="settings_error_caption" xml:space="preserve">
    <value>Deine Einstellungen sind nicht valide!</value>
  </data>
  <data name="settings_error_mainMessage" xml:space="preserve">
    <value>Die Einstellungen sind nicht valide.
Bitte Überprüfe nocheinmal deine Einstellungen und versuche es dann erneut.
Grund:
{0}</value>
    <comment>0} steht für einer der anderen strings, die den prefix settings_error haben.</comment>
  </data>
  <data name="settings_error_manifestIsNull" xml:space="preserve">
    <value>Das Addon-Manifest wurde nicht konfiguriert.</value>
  </data>
  <data name="settings_error_wowInterfacePathEndsNotWithInterface" xml:space="preserve">
    <value>Der Pfad zum Interface-Ordner deiner WoW-Classic installation endet nicht mit "interface". Bitte Überprüfe ob der Pfad korrekt ist.</value>
  </data>
  <data name="settings_error_wowInterfacePathIsNull" xml:space="preserve">
    <value>Der Pfad zum Interface-Ordner deiner WoW-Classic installation wurde nicht konfiguriert.</value>
  </data>
  <data name="settings_error_wowMenuPathIsNull" xml:space="preserve">
    <value>Der Installationspfad des wow_menu's wurde nicht konfiguriert.</value>
  </data>
</root>